name: Release Obsidian Plugin

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+'
  release:
    types: [published]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: Derive version from tag
        id: ver
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
          else
            TAG="${{ github.event.release.tag_name }}"
          fi
          VERSION="${TAG#v}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update build/manifest.json version
        run: |
          jq '.version = "${{ steps.ver.outputs.version }}"' build/manifest.json > build/manifest.json.tmp
          mv build/manifest.json.tmp build/manifest.json

      - name: List build dir (debug)
        run: ls -la build

      - name: (optional) Zip bundle
        run: |
          cd build
          zip -r ../plugin-${{ steps.ver.outputs.version }}.zip manifest.json main.js styles.css 2>/dev/null || true
          cd -

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.tag }}
          name: ${{ steps.ver.outputs.tag }}
          files: |
            build/main.js
            build/manifest.json
            build/styles.css
            plugin-${{ steps.ver.outputs.version }}.zip
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
